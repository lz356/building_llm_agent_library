{
  "id": "data_visualization_of_building_sensor_simulation_data",
  "description": "This workflow is designed to automatically perform data visualization and analysis of building sensor or simulation data based on the userâ€™s specific needs.",
  "model": "gpt-4o",
  "nodes": [
    {
      "id": "Manager",
      "description": "Distributes tasks among other agents and manages the overall workflow.",
      "system_message": "You are a manager responsible for overseeing data visualization and analysis of building sensor or simulation data based on user-specific requirements. Distribute tasks to the Coder, Critic, and Building Expert as needed. If the Critic suggests 'TERMINATE,' conclude the workflow.",
      "type": "agent",
      "agent_tools": [],
      "short_term_memory": ["all"],
      "human_input": ["first_time"]
    },
    {
      "id": "Coder",
      "description": "Generates and executes code for data visualization and analysis.",
      "system_message": "You are responsible for generating Python code based on the Manager's requests. Decide whether to call tools to execute Python code or consult with the Manager for clarification.",
      "type": "agent",
      "agent_tools": [],
      "short_term_memory": ["all"],
      "human_input": ["never"]
    },
    {
      "id": "action_node_1",
      "description": "Executes Python code generated by the Coder and returns the results.",
      "system_message": "Call the PythonREPL tool to execute the Python code generated by the Coder, and return the results.",
      "type": "action",
      "agent_tools": ["PythonREPL"],
      "short_term_memory": ["all"],
      "human_input": ["never"]
    },
    {
      "id": "Critic",
      "description": "Evaluates the quality of visualization code using best practices.",
      "system_message": "Critic. You are a helpful assistant highly skilled in evaluating the quality of a given visualization code by providing a score from 1 (bad) - 10 (good) while providing clear rationale. YOU MUST CONSIDER VISUALIZATION BEST PRACTICES for each evaluation. Specifically, you can carefully evaluate the code across the following dimensions:\n\n- bugs (bugs): Are there bugs, logic errors, syntax errors, or typos? Are there any reasons why the code may fail to compile? How should it be fixed? If ANY bug exists, the bug score MUST be less than 5.\n- Data transformation (transformation): Is the data transformed appropriately for the visualization type? E.g., is the dataset appropriately filtered, aggregated, or grouped if needed? If a date field is used, is the date field first converted to a date object, etc.?\n- Goal compliance (compliance): How well does the code meet the specified visualization goals?\n- Visualization type (type): CONSIDERING BEST PRACTICES, is the visualization type appropriate for the data and intent? Is there a visualization type that would be more effective in conveying insights? If a different visualization type is more appropriate, the score MUST BE LESS THAN 5.\n- Data encoding (encoding): Is the data encoded appropriately for the visualization type?\n- Aesthetics (aesthetics): Are the aesthetics of the visualization appropriate for the visualization type and the data?\n\nYOU MUST PROVIDE A SCORE for each of the above dimensions.\n{bugs: 0, transformation: 0, compliance: 0, type: 0, encoding: 0, aesthetics: 0}\nDo not suggest code.\nFinally, based on the critique above, suggest a concrete list of actions that the coder should take to improve the code. Return 'TERMINATE' if the figure meets the critique and is successfully generated.",
      "type": "agent",
      "agent_tools": [],
      "short_term_memory": ["all"],
      "human_input": ["never"]
    },
    {
      "id": "Building_Expert",
      "description": "Provides domain knowledge to enhance visualization and analysis.",
      "system_message": "You are a building expert with extensive domain knowledge in building energy analysis. Provide expert insights to enhance the visualization and analysis of building sensor or simulation data.",
      "type": "agent",
      "agent_tools": [],
      "short_term_memory": ["all"],
      "human_input": ["never"]
    }
  ],
  "edges": [
    {
      "id": "edge_1",
      "type": "simple",
      "connection": ["START", ["Manager"]]
    },
    {
      "id": "edge_2",
      "type": "conditional",
      "connection": ["Coder", ["Manager", "action_node_1"]]
    },
    {
      "id": "edge_3",
      "type": "simple",
      "connection": ["action_node_1", ["Coder"]]
    },
    {
      "id": "edge_4",
      "type": "simple",
      "connection": ["Critic", ["Manager"]]
    },
    {
      "id": "edge_5",
      "type": "simple",
      "connection": ["Building_Expert", ["Manager"]]
    },
    {
      "id": "edge_6",
      "type": "conditional",
      "connection": ["Manager", ["Coder", "Critic", "Building_Expert", "END"]]
    }
  ],
  "tools": [
    {
      "id": "PythonREPL",
      "description": "Executes Python code as a string using the PythonREPL tool from LangChain.",
      "content": "tools/python_repl.py"
    }
  ],
  "long_term_memory": ["none"]
}
